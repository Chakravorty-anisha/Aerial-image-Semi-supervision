# -*- coding: utf-8 -*-
"""unet_gen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-y_a0ySqlrOaSULROVz9W7JeEaPF7HQR
"""

from tensorflow.keras.layers import Conv2DTranspose, Activation, Concatenate
from tensorflow.keras.models import Model
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.initializers import RandomNormal

def define_unet_resnet50(resnet_model, image_shape=(256, 256, 3)):
    init = RandomNormal(stddev=0.02)

    # Encoder
    for layer in resnet_model.layers:
        layer.trainable = False  # Freeze ResNet layers

    e1 = resnet_model.get_layer('conv1_relu').output
    e2 = resnet_model.get_layer('conv2_block3_out').output
    e3 = resnet_model.get_layer('conv3_block4_out').output
    e4 = resnet_model.get_layer('conv4_block6_out').output

    # Decoder
    d = Conv2DTranspose(512, (4, 4), strides=(2, 2), padding='same', kernel_initializer=init)(e4)
    d = Activation('relu')(d)
    d = Concatenate()([d, e3])
    d = Conv2DTranspose(256, (4, 4), strides=(2, 2), padding='same', kernel_initializer=init)(d)
    d = Activation('relu')(d)
    d = Concatenate()([d, e2])
    d = Conv2DTranspose(128, (4, 4), strides=(2, 2), padding='same', kernel_initializer=init)(d)
    d = Activation('relu')(d)
    d = Concatenate()([d, e1])

    # Output layer
    out_layer = Conv2DTranspose(image_shape[2], (4, 4), strides=(2, 2), padding='same', kernel_initializer=init, activation='tanh', name='output_image')(d)
    out_image = Activation('tanh')( out_layer)
    model = Model(resnet_model.input, out_image, name='generator')

    return model