# -*- coding: utf-8 -*-
"""gan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ifRvOyxk9MUYHcQqwLeVkxxPRZOjf6bp
"""

from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input
from tensorflow.keras.optimizers import Adam
from discriminator import define_discriminator
from generator import define_unet_resnet50

def define_gan(generator_model, discriminator_model, image_shape, opt):
    # Make weights in the discriminator not trainable
    discriminator_model.trainable = False

    # Source image input
    in_src = Input(shape=image_shape)

    # Generate image using the generator
    gen_out = generator_model(in_src)

    # Connect the source input and generated output to the discriminator
    dis_out = discriminator_model([in_src, gen_out])

    # Define the GAN model
    model = Model(inputs=in_src, outputs=[dis_out, gen_out])

    # Compile the model
    model.compile(loss=['binary_crossentropy', 'mae'], optimizer=opt, loss_weights=[1, 100])

    return model